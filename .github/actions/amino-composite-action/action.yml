name: Amino Composite Action
description: Sets up environment and launches EC2 instance
inputs:
  project_name:
    description: Project name
    required: true
  build_type:
    description: Build type (e.g., userdebug)
    required: true
  testing:
    description: Enable testing (yes/no)
    required: false
  manifest_url:
    description: URL of the manifest repository
    required: true
  build_commands:
    description: Commands for compilation
    required: true
  self_hosted_pat:
    required: true
    type: string
outputs:
  instance_ip:
    description: Private IP of the launched instance
  instance_id:
    description: ID of the launched instance
  runner_name:
    description: Name of the self-hosted runner
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::482037961672:role/GithubDeploymentRole
        aws-region: eu-north-1

    - name: Fetch GitHub Runner Token
      id: get-token
      run: |
        RUNNER_TOKEN=$(curl -X POST -H "Authorization: Bearer ${{ inputs.self_hosted_pat }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/aminotv/android-cicd/actions/runners/registration-token | jq -r '.token')

        if [[ -z "$RUNNER_TOKEN" || "$RUNNER_TOKEN" == "null" ]]; then
            echo "Error: Runner token not retrieved!" | tee -a github-runner-setup.log
            exit 1
        fi

        echo "RUNNER_TOKEN=$RUNNER_TOKEN" >> $GITHUB_ENV
      shell: bash

    - name: Generate Runner Name
      id: env-setup
      run: |
        RUNNER_NAME="self-hosted-runner-$(date +%Y%m%d%H%M%S)"
        echo "RUNNER_NAME=$RUNNER_NAME" >> $GITHUB_ENV
        echo "runner_name=$RUNNER_NAME" >> $GITHUB_OUTPUT
      shell: bash

    - name: Prepare User Data Script
      run: |
        cat <<EOF > user-data.sh
        #!/bin/bash
        sudo apt update && sudo apt install -y unzip git curl jq awscli yq
        mkdir -p /home/ubuntu/actions-runner && cd /home/ubuntu/actions-runner
        RUNNER_TOKEN="${{ env.RUNNER_TOKEN }}"
        RUNNER_NAME="${{ env.RUNNER_NAME }}"
        curl -o actions-runner-linux-x64.tar.gz -L https://github.com/actions/runner/releases/download/v2.323.0/actions-runner-linux-x64-2.323.0.tar.gz
        tar xzf ./actions-runner-linux-x64.tar.gz
        ./config.sh --url https://github.com/aminotv/android-cicd --token "\$RUNNER_TOKEN" --name "\$RUNNER_NAME"
        nohup ./run.sh > runner.log 2>&1 &
        EOF
        chmod +x user-data.sh
      shell: bash

    - name: Launch EC2 Instance
      run: |
        UBUNTU_AMI_ID=$(aws ec2 describe-images --owners 099720109477 \
          --filters "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*" \
          --query 'Images | sort_by(@, &CreationDate)[-1].ImageId' --output text)
        INSTANCE_ID=$(aws ec2 run-instances --image-id "$UBUNTU_AMI_ID" --count 1 --instance-type t3.micro \
          --key-name praveenkeyAWS --security-group-ids sg-0b717514e2fcd22ce \
          --subnet-id $(aws ec2 describe-subnets --query 'Subnets[0].SubnetId' --output text) \
          --iam-instance-profile Arn=arn:aws:iam::482037961672:instance-profile/GithubDeploymentRole \
          --user-data file://user-data.sh \
          --query "Instances[0].InstanceId" --output text)

        INSTANCE_IP=$(aws ec2 describe-instances --instance-ids "$INSTANCE_ID" --query "Reservations[0].Instances[0].PrivateIpAddress" --output text)

        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
        echo "instance_ip=$INSTANCE_IP" >> $GITHUB_OUTPUT
        echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT
      shell: bash
