name: Launch EC2 Instance
description: Starts an EC2 instance and outputs the details.

inputs:
  aws_access_key_id:
    required: true
    description: AWS Access Key ID
  aws_secret_access_key:
    required: true
    description: AWS Secret Access Key

outputs:
  instance_id:
    description: "Instance ID"
    value: ${{ steps.start-ec2.outputs.instance_id }}
  instance_ip:
    description: "Instance IP"
    value: ${{ steps.start-ec2.outputs.instance_ip }}

runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      shell: bash
      run: |
        aws configure set aws_access_key_id ${{ inputs.aws_access_key_id }}
        aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }}
        aws configure set region us-east-1

    - name: Install AWS CLI
      shell: bash
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws --version

    - name: Generate Dynamic Runner Name
      id: set-runner-name
      shell: bash
      run: |
        RUNNER_NAME="self-hosted-runner-$(date +%Y%m%d%H%M%S)"
        echo "RUNNER_NAME=$RUNNER_NAME" >> $GITHUB_ENV
        echo "runner_name=$RUNNER_NAME" >> $GITHUB_OUTPUT

    - name: Launch EC2 Instance for Runner
      id: start-ec2
      shell: bash
      run: |
        SUBNET_ID=$(aws ec2 describe-subnets --query 'Subnets[0].SubnetId' --output text)
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0f9de6e2d2f067fca \
          --instance-type t3.micro \
          --security-group-ids sg-04b81fc613de74b2a \
          --subnet-id $SUBNET_ID \
          --key-name new-key \
          --iam-instance-profile Name=EC2SSMInstanceProfile1 \
          --associate-public-ip-address \
          --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=$RUNNER_NAME}]" \
          --query "Instances[0].InstanceId" --output text)
        INSTANCE_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text)

        echo "::set-output name=instance_ip::$INSTANCE_IP"
        echo "::set-output name=instance_id::$INSTANCE_ID"

    - name: Wait for EC2 Instance to Start
      shell: bash
      run: |
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID

    - name: Ensure EC2 Instance Is Fully Initialized
      shell: bash
      run: |
        while true; do
          INSTANCE_STATE=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query "InstanceStatuses[0].InstanceState.Name" --output text)
          SYSTEM_STATUS=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query "InstanceStatuses[0].SystemStatus.Status" --output text)
          INSTANCE_STATUS=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query "InstanceStatuses[0].InstanceStatus.Status" --output text)
          
          echo "Current State: $INSTANCE_STATE | System Status: $SYSTEM_STATUS | Instance Status: $INSTANCE_STATUS"
          
          if [[ "$INSTANCE_STATE" == "running" && "$SYSTEM_STATUS" == "ok" && "$INSTANCE_STATUS" == "ok" ]]; then
            echo "Instance is fully initialized!"
            break
          fi
          sleep 10
        done
