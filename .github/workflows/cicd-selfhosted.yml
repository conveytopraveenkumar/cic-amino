name: AWS Self-Hosted Runner Setup

on:
  push:
    branches:
      - master

jobs:
  setup-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Launch EC2 Instance
        id: start-ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0f9de6e2d2f067fca \
            --instance-type t3.micro \
            --security-group-ids sg-04b81fc613de74b2a \
            --subnet-id subnet-089b826030629808d \
            --key-name new-key \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHubRunner}]' \
             --user-data '#!/bin/bash
              sudo apt update && sudo apt install -y unzip git curl jq
            
              # Create runner directory
              cd /home/ubuntu
              mkdir -p actions-runner && cd actions-runner
            
              # Download GitHub Actions Runner
              curl -o actions-runner-linux-x64-2.323.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.323.0/actions-runner-linux-x64-2.323.0.tar.gz
            
              # Optional: Validate the hash
              echo "0dbc9bf5a58620fc52cb6cc0448abcca964a8d74b5f39773b7afcad9ab691e19  actions-runner-linux-x64-2.323.0.tar.gz" | shasum -a 256 -c
            
              # Extract the installer
              tar xzf ./actions-runner-linux-x64-2.323.0.tar.gz
            
              # Register runner with GitHub
              ./config.sh --url https://github.com/conveytopraveenkumar/cic-amino --token AWAHMCCW4FY6ADE4OM5QFF3IEMADM
            
              # Start the runner
              ./svc.sh install
              ./svc.sh start' \
              --query "Instances[0].InstanceId" --output text

      - name: Wait for EC2 Instance to Start
        run: aws ec2 wait instance-running --instance-ids $INSTANCE_ID

      - name: Ensure EC2 Instance Is Fully Initialized
        run: |
          while true; do
            INSTANCE_STATE=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query "InstanceStatuses[0].InstanceState.Name" --output text)
            SYSTEM_STATUS=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query "InstanceStatuses[0].SystemStatus.Status" --output text)
            INSTANCE_STATUS=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID --query "InstanceStatuses[0].InstanceStatus.Status" --output text)

            echo "Current State: $INSTANCE_STATE | System Status: $SYSTEM_STATUS | Instance Status: $INSTANCE_STATUS"

            if [[ "$INSTANCE_STATE" == "running" && "$SYSTEM_STATUS" == "ok" && "$INSTANCE_STATUS" == "ok" ]]; then
              echo "Instance is fully initialized!"
              break
            fi
            sleep 10
          done
        

  run-on-self-hosted:
    needs: setup-runner
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Project
        run: |
          echo "Running build on self-hosted runner..."
          mkdir -p /home/ubuntu/build-output
          echo "Build successful!" > /home/ubuntu/build-output/result.txt

      - name: Stop EC2 Instance
        run: |
          aws ec2 stop-instances --instance-ids $INSTANCE_ID
