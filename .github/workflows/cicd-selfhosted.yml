name: AWS Self-Hosted Runner Setup
on:
  push:
    branches:
      - master

jobs:
  setup-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install AWS CLI
        run: |
          sudo apt update
          sudo apt install -y awscli
          aws --version

      - name: Launch EC2 Instance
        id: start-ec2
        run: |
          SUBNET_ID=$(aws ec2 describe-subnets --query 'Subnets[0].SubnetId' --output text)
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0f9de6e2d2f067fca \
            --instance-type t3.micro \
            --security-group-ids sg-04b81fc613de74b2a \
            --subnet-id $SUBNET_ID \
            --key-name new-key \
            --associate-public-ip-address \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=GitHubRunner1}]" \
            --query "Instances[0].InstanceId" --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Wait for EC2 Instance to Start
        run: aws ec2 wait instance-running --instance-ids $INSTANCE_ID

      - name: Get Public IP and Validate SSH Access
        run: |
          INSTANCE_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
          if [ -z "$INSTANCE_IP" ]; then
            echo "Error: Public IP not assigned."
            exit 1
          fi

  install-and-configure-runner:
    needs: setup-runner
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > private-key.pem
          chmod 600 private-key.pem

      - name: Setup and Configure GitHub Runner on EC2 (Merged Step)
        run: |
          ssh -i private-key.pem -o StrictHostKeyChecking=no ubuntu@${INSTANCE_IP} "bash -s" << 'EOF'
          sudo apt update && sudo apt install -y unzip git curl jq awscli
          aws --version
          mkdir -p /home/ubuntu/actions-runner && cd /home/ubuntu/actions-runner
          curl -o actions-runner-linux-x64.tar.gz -L https://github.com/actions/runner/releases/download/v2.323.0/actions-runner-linux-x64-2.323.0.tar.gz
          tar xzf ./actions-runner-linux-x64.tar.gz
          
          RUNNER_TOKEN=$(curl -X POST -H "Authorization: Bearer ${{ secrets.SELF_HOSTED_PAT }}" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/conveytopraveenkumar/cic-amino/actions/runners/registration-token | jq -r '.token')

          echo "Using Token: $RUNNER_TOKEN"
          ./config.sh --url https://github.com/conveytopraveenkumar/cic-amino \
          --token $RUNNER_TOKEN \
          --name "AWS-Self-Hosted-1" \
          --labels aws,ec2,linux \
          --work /home/ubuntu/runner_work \
          --runnergroup Default
          ./run.sh > runner.log 2>&1 &
          EOF

  run-on-self-hosted:
    needs: install-and-configure-runner
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Project
        run: |
          echo "Running build on self-hosted runner..."
          mkdir -p /home/ubuntu/build-output
          echo "Build successful!" > /home/ubuntu/build-output/result.txt
